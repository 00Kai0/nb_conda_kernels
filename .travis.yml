language: generic
sudo: false

branches:
  only:
    - master
    - /^\d+\.\d+.*$/

os:
  - linux
  - osx

env:
  - PYTHON_VERSION=2.7
  - PYTHON_VERSION=3.5
  - PYTHON_VERSION=3.6
  - PYTHON_VERSION=3.6 CONDA_SPEC='=4.3'

install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    else
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  # Fix the conda version before full activation
  - $HOME/miniconda/bin/conda install conda$CONDA_SPEC --yes
  - source $HOME/miniconda/bin/activate
  - conda config --set always_yes yes --set changeps1 no --set auto_update_conda no
  # The tests need to see the Python kernel in the root environment
  - conda install conda-verify conda-build ipykernel
  # We need to create additional environments to fully test the logic,
  # including an R kernel, a Python kernel, and environment names with
  # at least one non-ASCII character and one space. Because AppVeyor is
  # difficult to work with for non-ASCII content we're using env files.
  - conda env create -f conda-recipe/testenv1.yaml
  - conda env create -f conda-recipe/testenv2.yaml
  - conda info -a

script:
  - conda build conda-recipe --python=$PYTHON_VERSION
